{
  "group": "Dependency",
  "name": "InfluxDB",
  "label_template": "${COUNT}",
  "enable_pipeline_locking": false,
  "tracking_tool": null,
  "timer": null,
  "environment_variables": [],
  "materials": [{
    "url": "https://github.com/caseycurry/LucaOpsDependencies",
    "branch": "master",
    "filter": null,
    "destination": null,
    "auto_update": true,
    "name": null,
    "type": "git"
  }],
  "stages": [{
    "name": "Containerize",
    "fetch_materials": true,
    "never_cleanup_artifacts": false,
    "clean_working_directory": true,
    "environment_variables": [{
      "name": "PATH",
      "value": "/usr/local/bin:/usr/bin:/bin"
    }],
    "jobs": [{
      "name": "Containerize",
      "environment_variables": [],
      "tabs": [],
      "resources": [],
      "artifacts": [{
        "source": "container",
        "destination": null,
        "type": "build"
      }],
      "properties": [],
      "run_instance_count": null,
      "timeout": 0,
      "tasks": [{
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "curl",
        "arguments": [
          "-LO",
          "https://dl.influxdata.com/influxdb/releases/influxdb-1.3.5-static_linux_amd64.tar.gz"
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "tar",
        "arguments": [
          "xvfz",
          "influxdb-1.3.5-static_linux_amd64.tar.gz"
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "ls",
        "arguments": [
          "./influxdb-1.3.5-1"
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "sed",
        "arguments": [
          "-i",
          "s/# write-tracing = false/write-tracing = true/",
          "./influxdb-1.3.5-1/influxdb.conf"
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "acbuild",
        "arguments": [
          "begin"
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "acbuild",
        "arguments": [
          "set-name",
          "influxdb"
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "bash",
        "arguments": [
          "-c",
          "acbuild label add version $GO_REVISION"
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "acbuild",
        "arguments": [
          "copy",
          "./influxdb-1.3.5-1",
          "/influxdb"
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "acbuild",
        "arguments": [
          "environment",
          "add",
          "INFLUXDB_CONFIG_PATH",
          "/influxdb/influxdb.conf"
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "acbuild",
        "arguments": [
          "set-exec",
          "/influxdb/influxd"
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "acbuild",
        "arguments": [
          "port",
          "add",
          "http",
          "tcp",
          "8086"
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "bash",
        "arguments": [
          "-c",
          "mkdir ./container && acbuild write ./container/influxdb.$GO_REVISION.aci"
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "acbuild",
        "arguments": [
          "end"
        ],
        "working_directory": null
      }]
    }]
  }, {
    "name": "DeployToDev",
    "fetch_materials": true,
    "never_cleanup_artifacts": false,
    "clean_working_directory": true,
    "environment_variables": [{
      "name": "PATH",
      "value": "/usr/local/bin:/usr/bin:/bin"
    }],
    "jobs": [{
      "name": "SubmitNomadJob",
      "environment_variables": [],
      "tabs": [],
      "resources": [],
      "artifacts": [],
      "properties": [],
      "run_instance_count": null,
      "timeout": 0,
      "tasks": [{
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "InfluxDB",
        "stage": "Containerize",
        "job": "Containerize",
        "is_source_a_file": false,
        "source": "./container",
        "destination": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "bash",
        "arguments": [
          "-c",
          "ssh -o StrictHostKeyChecking=no -i /var/go/.ssh/id_rsa cj@server.nomad.devlab \"cd /www/containers && ls -t | grep -e 'influxdb' | tail -n +4 | xargs -r rm\""
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "bash",
        "arguments": [
          "-c",
          "scp -o StrictHostKeyChecking=no -i /var/go/.ssh/id_rsa ./container/influxdb.$GO_REVISION.aci cj@server.nomad.devlab:/www/containers"
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "bash",
        "arguments": [
          "-c",
          "sed -i \"s/{{version}}/$GO_REVISION/\" ./.nomad.json"
        ],
        "working_directory": "./influxdb"
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "bash",
        "arguments": [
          "-c",
          "if [ $(curl -XPOST http://server.nomad.devlab:4646/v1/jobs -H 'Content-Type: application/json' --data-binary @./.nomad.json --write-out '\nSTATUS CODE: %{http_code}' | grep 'STATUS CODE: ' | sed 's/STATUS CODE: //') -ne 200 ]; then exit 1; fi"
        ],
        "working_directory": "./influxdb"
      }]
    }]
  }]
}
